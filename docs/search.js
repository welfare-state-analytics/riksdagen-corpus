window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"pyriksdagen": {"fullname": "pyriksdagen", "modulename": "pyriksdagen", "kind": "module", "doc": "<p>A python package for accessing and processing the Swedish parliament data</p>\n"}, "pyriksdagen.dataset": {"fullname": "pyriksdagen.dataset", "modulename": "pyriksdagen.dataset", "kind": "module", "doc": "<p></p>\n"}, "pyriksdagen.dataset.IntroDataset": {"fullname": "pyriksdagen.dataset.IntroDataset", "modulename": "pyriksdagen.dataset", "qualname": "IntroDataset", "kind": "class", "doc": "<p>Dataset for predicting introductions</p>\n", "bases": "typing.Generic[+T_co]"}, "pyriksdagen.dataset.IntroDataset.__init__": {"fullname": "pyriksdagen.dataset.IntroDataset.__init__", "modulename": "pyriksdagen.dataset", "qualname": "IntroDataset.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">df</span></span>)</span>"}, "pyriksdagen.dataset.IntroDataset.df": {"fullname": "pyriksdagen.dataset.IntroDataset.df", "modulename": "pyriksdagen.dataset", "qualname": "IntroDataset.df", "kind": "variable", "doc": "<p></p>\n"}, "pyriksdagen.dataset.IntroDataset.tokenizer": {"fullname": "pyriksdagen.dataset.IntroDataset.tokenizer", "modulename": "pyriksdagen.dataset", "qualname": "IntroDataset.tokenizer", "kind": "variable", "doc": "<p></p>\n"}, "pyriksdagen.dataset.MergeDataset": {"fullname": "pyriksdagen.dataset.MergeDataset", "modulename": "pyriksdagen.dataset", "qualname": "MergeDataset", "kind": "class", "doc": "<p>Dataset for predicting if introduction should be merged with next coming textblock</p>\n", "bases": "typing.Generic[+T_co]"}, "pyriksdagen.dataset.MergeDataset.__init__": {"fullname": "pyriksdagen.dataset.MergeDataset.__init__", "modulename": "pyriksdagen.dataset", "qualname": "MergeDataset.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">df</span></span>)</span>"}, "pyriksdagen.dataset.MergeDataset.df": {"fullname": "pyriksdagen.dataset.MergeDataset.df", "modulename": "pyriksdagen.dataset", "qualname": "MergeDataset.df", "kind": "variable", "doc": "<p></p>\n"}, "pyriksdagen.dataset.MergeDataset.tokenizer": {"fullname": "pyriksdagen.dataset.MergeDataset.tokenizer", "modulename": "pyriksdagen.dataset", "qualname": "MergeDataset.tokenizer", "kind": "variable", "doc": "<p></p>\n"}, "pyriksdagen.db": {"fullname": "pyriksdagen.db", "modulename": "pyriksdagen.db", "kind": "module", "doc": "<p></p>\n"}, "pyriksdagen.db.year_iterator": {"fullname": "pyriksdagen.db.year_iterator", "modulename": "pyriksdagen.db", "qualname": "year_iterator", "kind": "function", "doc": "<p>Iterate over triplets of (corpus_year, package_ids, year_db) for provided file database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.db.load_patterns": {"fullname": "pyriksdagen.db.load_patterns", "modulename": "pyriksdagen.db", "qualname": "load_patterns", "kind": "function", "doc": "<p>Load regex patterns from disk</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">phase</span><span class=\"o\">=</span><span class=\"s1\">&#39;segmentation&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.db.filter_db": {"fullname": "pyriksdagen.db.filter_db", "modulename": "pyriksdagen.db", "qualname": "filter_db", "kind": "function", "doc": "<p>Filter dataframe either based on year or protocol id</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span>, </span><span class=\"param\"><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">protocol_id</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.db.load_ministers": {"fullname": "pyriksdagen.db.load_ministers", "modulename": "pyriksdagen.db", "qualname": "load_ministers", "kind": "function", "doc": "<p>Unpacks very nested minister.json file to a df.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">&#39;corpus/wiki-data/minister.json&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.db.load_metadata": {"fullname": "pyriksdagen.db.load_metadata", "modulename": "pyriksdagen.db", "qualname": "load_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.db.load_expressions": {"fullname": "pyriksdagen.db.load_expressions", "modulename": "pyriksdagen.db", "qualname": "load_expressions", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">phase</span><span class=\"o\">=</span><span class=\"s1\">&#39;segmentation&#39;</span>, </span><span class=\"param\"><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.db.clean_person_duplicates": {"fullname": "pyriksdagen.db.clean_person_duplicates", "modulename": "pyriksdagen.db", "qualname": "clean_person_duplicates", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">df</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.download": {"fullname": "pyriksdagen.download", "modulename": "pyriksdagen.download", "kind": "module", "doc": "<p></p>\n"}, "pyriksdagen.download.LazyArchive": {"fullname": "pyriksdagen.download.LazyArchive", "modulename": "pyriksdagen.download", "qualname": "LazyArchive", "kind": "class", "doc": "<p>Wrapper to KBLab archive class so that you don't need to\nlog in if you don't actually use the archive</p>\n"}, "pyriksdagen.download.LazyArchive.archive": {"fullname": "pyriksdagen.download.LazyArchive.archive", "modulename": "pyriksdagen.download", "qualname": "LazyArchive.archive", "kind": "variable", "doc": "<p></p>\n"}, "pyriksdagen.download.oppna_data_to_dict": {"fullname": "pyriksdagen.download.oppna_data_to_dict", "modulename": "pyriksdagen.download", "qualname": "oppna_data_to_dict", "kind": "function", "doc": "<p>Load protocols with the new XML / HTML structure (from 2013 onwards)\nand convert it to a python dict with contents.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.download.dl_kb_blocks": {"fullname": "pyriksdagen.download.dl_kb_blocks", "modulename": "pyriksdagen.download", "qualname": "dl_kb_blocks", "kind": "function", "doc": "<p>Download protocol from betalab, convert it to the simple XML 'blocks' schema</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">package_id</span>, </span><span class=\"param\"><span class=\"n\">archive</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.download.get_blocks": {"fullname": "pyriksdagen.download.get_blocks", "modulename": "pyriksdagen.download", "qualname": "get_blocks", "kind": "function", "doc": "<p>Get content and text blocks from an OCR output XML file. Concatenate words into sentences.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>protocol_id:</strong>  ID of the protocol</li>\n<li><strong>archive:</strong>  KBlab archive</li>\n<li><strong>load:</strong>  Load the file from disk if available</li>\n<li><strong>save:</strong>  Save the downloaded file to disk</li>\n</ul>\n\n<p>Returns an lxml elem tree with the structure page &gt; contentBlock &gt; textBlock.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">protocol_id</span>, </span><span class=\"param\"><span class=\"n\">archive</span>, </span><span class=\"param\"><span class=\"n\">load</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.download.count_pages": {"fullname": "pyriksdagen.download.count_pages", "modulename": "pyriksdagen.download", "qualname": "count_pages", "kind": "function", "doc": "<p>Generate a dataframe of pages between provided start and end years. Fetches information from KB's API.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">start</span>, </span><span class=\"param\"><span class=\"n\">end</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.download.fetch_files": {"fullname": "pyriksdagen.download.fetch_files", "modulename": "pyriksdagen.download", "qualname": "fetch_files", "kind": "function", "doc": "<p>Fetch all files with the provided extension from a KBLab package</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>package:</strong>  KBLab client package</li>\n<li><strong>extension:</strong>  File extension of the files that you want to fetch.</li>\n<li>String, or None which outputs all filetypes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">package</span>, </span><span class=\"param\"><span class=\"n\">extension</span><span class=\"o\">=</span><span class=\"s1\">&#39;xml&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.download.randomize_ordinals": {"fullname": "pyriksdagen.download.randomize_ordinals", "modulename": "pyriksdagen.download", "qualname": "randomize_ordinals", "kind": "function", "doc": "<p>Create pseudo-random ordinal numbers for a database</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">files</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.export": {"fullname": "pyriksdagen.export", "modulename": "pyriksdagen.export", "kind": "module", "doc": "<p>Parla Clarin generation</p>\n"}, "pyriksdagen.export.create_tei": {"fullname": "pyriksdagen.export.create_tei", "modulename": "pyriksdagen.export", "qualname": "create_tei", "kind": "function", "doc": "<p>Create a Parla-Clarin TEI element from a list of segments.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (lxml.etree.Element):</strong>  the protocol data as an lxml tree root</li>\n<li><strong>metadata (dict):</strong>  Metadata of the parliamentary session</li>\n</ul>\n\n<p>Returns\n    tei (lxml.etree.Element): the protocol as a TEI-formatted lxml tree root</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span>, </span><span class=\"param\"><span class=\"n\">metadata</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.export.dict_to_tei": {"fullname": "pyriksdagen.export.dict_to_tei", "modulename": "pyriksdagen.export", "qualname": "dict_to_tei", "kind": "function", "doc": "<p>Convert a metadata dict into a TEI XML tree</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (dict):</strong>  dictionary containing protocol level metadata</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tei (lxml.etree.Element): the protocol as a TEI-formatted lxml tree root</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.export.gen_parlaclarin_corpus": {"fullname": "pyriksdagen.export.gen_parlaclarin_corpus", "modulename": "pyriksdagen.export", "qualname": "gen_parlaclarin_corpus", "kind": "function", "doc": "<p>Create a parla-clarin file out of all protocols that are provided.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>protocol_db (pd.df):</strong>  dataframe of the protocols</li>\n<li><strong>archive (???):</strong>  KB archive instance</li>\n<li><strong>corpus_metadata (dict):</strong>  metadata on the corpus</li>\n<li><strong>str_output (bool):</strong>  whether to return as an str. Deprecated.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>corpus (???): parlaclarin corpus</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">protocol_db</span>, </span><span class=\"param\"><span class=\"n\">archive</span>, </span><span class=\"param\"><span class=\"n\">corpus_metadata</span><span class=\"o\">=</span><span class=\"p\">{}</span>, </span><span class=\"param\"><span class=\"n\">str_output</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.export.dict_to_parlaclarin": {"fullname": "pyriksdagen.export.dict_to_parlaclarin", "modulename": "pyriksdagen.export", "qualname": "dict_to_parlaclarin", "kind": "function", "doc": "<p>Create per-protocol parlaclarin files of all files provided in file_db.\nDoes not return anything, instead writes the data on disk.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (dict):</strong>  metadata and data</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.export.parlaclarin_workflow_individual": {"fullname": "pyriksdagen.export.parlaclarin_workflow_individual", "modulename": "pyriksdagen.export", "qualname": "parlaclarin_workflow_individual", "kind": "function", "doc": "<p>Create per-protocol parlaclarin files of all files provided in file_db.\nDoes not return anything, instead writes the data on disk.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>file_db (pd.df):</strong>  dataframe of the files</li>\n<li><strong>archive (???):</strong>  KB archive instance</li>\n<li><strong>corpus_metadata (dict):</strong>  corpus-level metadata</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_db</span>, </span><span class=\"param\"><span class=\"n\">archive</span>, </span><span class=\"param\"><span class=\"n\">corpus_metadata</span><span class=\"o\">=</span><span class=\"p\">{}</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp": {"fullname": "pyriksdagen.match_mp", "modulename": "pyriksdagen.match_mp", "kind": "module", "doc": "<p></p>\n"}, "pyriksdagen.match_mp.multiple_replace": {"fullname": "pyriksdagen.match_mp.multiple_replace", "modulename": "pyriksdagen.match_mp", "qualname": "multiple_replace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span>, </span><span class=\"param\"><span class=\"n\">i_start</span><span class=\"o\">=</span><span class=\"mi\">192</span>, </span><span class=\"param\"><span class=\"n\">i_end</span><span class=\"o\">=</span><span class=\"mi\">383</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.clean_names": {"fullname": "pyriksdagen.match_mp.clean_names", "modulename": "pyriksdagen.match_mp", "qualname": "clean_names", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">names</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.name_equals": {"fullname": "pyriksdagen.match_mp.name_equals", "modulename": "pyriksdagen.match_mp", "qualname": "name_equals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.name_almost_equals": {"fullname": "pyriksdagen.match_mp.name_almost_equals", "modulename": "pyriksdagen.match_mp", "qualname": "name_almost_equals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.names_in": {"fullname": "pyriksdagen.match_mp.names_in", "modulename": "pyriksdagen.match_mp", "qualname": "names_in", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.names_in_rev": {"fullname": "pyriksdagen.match_mp.names_in_rev", "modulename": "pyriksdagen.match_mp", "qualname": "names_in_rev", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.fuzzy_name": {"fullname": "pyriksdagen.match_mp.fuzzy_name", "modulename": "pyriksdagen.match_mp", "qualname": "fuzzy_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.subnames_in_mpname": {"fullname": "pyriksdagen.match_mp.subnames_in_mpname", "modulename": "pyriksdagen.match_mp", "qualname": "subnames_in_mpname", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.mpsubnames_in_name": {"fullname": "pyriksdagen.match_mp.mpsubnames_in_name", "modulename": "pyriksdagen.match_mp", "qualname": "mpsubnames_in_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.firstname_lastname": {"fullname": "pyriksdagen.match_mp.firstname_lastname", "modulename": "pyriksdagen.match_mp", "qualname": "firstname_lastname", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"fullname": "pyriksdagen.match_mp.firstname_lastname_reversed", "modulename": "pyriksdagen.match_mp", "qualname": "firstname_lastname_reversed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.two_lastnames": {"fullname": "pyriksdagen.match_mp.two_lastnames", "modulename": "pyriksdagen.match_mp", "qualname": "two_lastnames", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.lastname": {"fullname": "pyriksdagen.match_mp.lastname", "modulename": "pyriksdagen.match_mp", "qualname": "lastname", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.match_mp.match_mp": {"fullname": "pyriksdagen.match_mp.match_mp", "modulename": "pyriksdagen.match_mp", "qualname": "match_mp", "kind": "function", "doc": "<p>Pseudocode:</p>\n\n<ul>\n<li>inputs:\n<ul>\n<li>person with cleaned name and party_abbrev</li>\n<li>db with cleaned name and filtered by chamber for efficiency</li>\n<li>variables list of lists with variable combinations to match by</li>\n<li>matching_funs list of functions to match/filter names by</li>\n</ul></li>\n<li>check if it is a talman/minister and use other matching function if true</li>\n<li>filter db by gender if persons gender is available</li>\n<li>use matching_funs in combination with variables until a unique match is found</li>\n<li>if there at any step is a match, return the persons db id</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">person</span>, </span><span class=\"param\"><span class=\"n\">db</span>, </span><span class=\"param\"><span class=\"n\">variables</span>, </span><span class=\"param\"><span class=\"n\">matching_funs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata": {"fullname": "pyriksdagen.metadata", "modulename": "pyriksdagen.metadata", "kind": "module", "doc": "<p></p>\n"}, "pyriksdagen.metadata.increase_date_precision": {"fullname": "pyriksdagen.metadata.increase_date_precision", "modulename": "pyriksdagen.metadata", "qualname": "increase_date_precision", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">date</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.check_date_overlap": {"fullname": "pyriksdagen.metadata.check_date_overlap", "modulename": "pyriksdagen.metadata", "qualname": "check_date_overlap", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">start1</span>, </span><span class=\"param\"><span class=\"n\">end1</span>, </span><span class=\"param\"><span class=\"n\">start2</span>, </span><span class=\"param\"><span class=\"n\">end2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.impute_member_date": {"fullname": "pyriksdagen.metadata.impute_member_date", "modulename": "pyriksdagen.metadata", "qualname": "impute_member_date", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span>, </span><span class=\"param\"><span class=\"n\">gov_db</span>, </span><span class=\"param\"><span class=\"n\">from_gov</span><span class=\"o\">=</span><span class=\"s1\">&#39;Regeringen L\u00f6fven I&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.impute_minister_date": {"fullname": "pyriksdagen.metadata.impute_minister_date", "modulename": "pyriksdagen.metadata", "qualname": "impute_minister_date", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span>, </span><span class=\"param\"><span class=\"n\">gov_db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.impute_speaker_date": {"fullname": "pyriksdagen.metadata.impute_speaker_date", "modulename": "pyriksdagen.metadata", "qualname": "impute_speaker_date", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.impute_date": {"fullname": "pyriksdagen.metadata.impute_date", "modulename": "pyriksdagen.metadata", "qualname": "impute_date", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.impute_party": {"fullname": "pyriksdagen.metadata.impute_party", "modulename": "pyriksdagen.metadata", "qualname": "impute_party", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span>, </span><span class=\"param\"><span class=\"n\">party</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.abbreviate_party": {"fullname": "pyriksdagen.metadata.abbreviate_party", "modulename": "pyriksdagen.metadata", "qualname": "abbreviate_party", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span>, </span><span class=\"param\"><span class=\"n\">party</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.clean_name": {"fullname": "pyriksdagen.metadata.clean_name", "modulename": "pyriksdagen.metadata", "qualname": "clean_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.infer_chamber": {"fullname": "pyriksdagen.metadata.infer_chamber", "modulename": "pyriksdagen.metadata", "qualname": "infer_chamber", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.format_member_role": {"fullname": "pyriksdagen.metadata.format_member_role", "modulename": "pyriksdagen.metadata", "qualname": "format_member_role", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.format_minister_role": {"fullname": "pyriksdagen.metadata.format_minister_role", "modulename": "pyriksdagen.metadata", "qualname": "format_minister_role", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.format_speaker_role": {"fullname": "pyriksdagen.metadata.format_speaker_role", "modulename": "pyriksdagen.metadata", "qualname": "format_speaker_role", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus": {"fullname": "pyriksdagen.metadata.Corpus", "modulename": "pyriksdagen.metadata", "qualname": "Corpus", "kind": "class", "doc": "<p>Store corpus metadata as a single pandas DataFrame where\nthe column 'source' indicates the type of the row</p>\n", "bases": "pandas.core.frame.DataFrame"}, "pyriksdagen.metadata.Corpus.__init__": {"fullname": "pyriksdagen.metadata.Corpus.__init__", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pyriksdagen.metadata.Corpus.add_mps": {"fullname": "pyriksdagen.metadata.Corpus.add_mps", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.add_mps", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus.add_ministers": {"fullname": "pyriksdagen.metadata.Corpus.add_ministers", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.add_ministers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus.add_speakers": {"fullname": "pyriksdagen.metadata.Corpus.add_speakers", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.add_speakers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus.add_persons": {"fullname": "pyriksdagen.metadata.Corpus.add_persons", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.add_persons", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"fullname": "pyriksdagen.metadata.Corpus.add_location_specifiers", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.add_location_specifiers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus.add_names": {"fullname": "pyriksdagen.metadata.Corpus.add_names", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.add_names", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus.impute_dates": {"fullname": "pyriksdagen.metadata.Corpus.impute_dates", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.impute_dates", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus.impute_parties": {"fullname": "pyriksdagen.metadata.Corpus.impute_parties", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.impute_parties", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"fullname": "pyriksdagen.metadata.Corpus.abbreviate_parties", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.abbreviate_parties", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.metadata.Corpus.clean_names": {"fullname": "pyriksdagen.metadata.Corpus.clean_names", "modulename": "pyriksdagen.metadata", "qualname": "Corpus.clean_names", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.mp": {"fullname": "pyriksdagen.mp", "modulename": "pyriksdagen.mp", "kind": "module", "doc": "<p>Handles the data on the members of parliament.</p>\n"}, "pyriksdagen.mp.create_database": {"fullname": "pyriksdagen.mp.create_database", "modulename": "pyriksdagen.mp", "qualname": "create_database", "kind": "function", "doc": "<p>Create an initial version of the MP dataframe</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.mp.create_full_database": {"fullname": "pyriksdagen.mp.create_full_database", "modulename": "pyriksdagen.mp", "qualname": "create_full_database", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dirs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.mp.add_gender": {"fullname": "pyriksdagen.mp.add_gender", "modulename": "pyriksdagen.mp", "qualname": "add_gender", "kind": "function", "doc": "<p>Based to first names, add gender to an MP dataframe.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mp_db</span>, </span><span class=\"param\"><span class=\"n\">names</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.mp.clean_names": {"fullname": "pyriksdagen.mp.clean_names", "modulename": "pyriksdagen.mp", "qualname": "clean_names", "kind": "function", "doc": "<p>Remove artefacts from MP names and specifiers</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mp_db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.mp.replace_party_abbreviations": {"fullname": "pyriksdagen.mp.replace_party_abbreviations", "modulename": "pyriksdagen.mp", "qualname": "replace_party_abbreviations", "kind": "function", "doc": "<p>Replace party abbreviations with standardized party names.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mp_db</span>, </span><span class=\"param\"><span class=\"n\">party_db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.mp.add_id": {"fullname": "pyriksdagen.mp.add_id", "modulename": "pyriksdagen.mp", "qualname": "add_id", "kind": "function", "doc": "<p>Generate deterministic IDs for mps based on the \"name\", \"party\", \"district\",\n\"chamber\", \"start\", and \"end\" columns of the dataframe.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mp_db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.mp.add_municipality": {"fullname": "pyriksdagen.mp.add_municipality", "modulename": "pyriksdagen.mp", "qualname": "add_municipality", "kind": "function", "doc": "<p>Add home municipalities as specifiers for matched MPs from personregister</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mp_db</span>, </span><span class=\"param\"><span class=\"n\">mun_db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.refine": {"fullname": "pyriksdagen.refine", "modulename": "pyriksdagen.refine", "kind": "module", "doc": "<p></p>\n"}, "pyriksdagen.refine.redetect_protocol": {"fullname": "pyriksdagen.refine.redetect_protocol", "modulename": "pyriksdagen.refine", "qualname": "redetect_protocol", "kind": "function", "doc": "<p>For each intro in a protocol, detect which MP is mentioned and map it to metadata.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>metadata (dict):</strong>  basic metadata on the protocol</li>\n<li><strong>protocol (lxml.etree):</strong>  protocol as an lxml tree</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>protocol as an lxml tree</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">metadata</span>, </span><span class=\"param\"><span class=\"n\">protocol</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.refine.detect_mps": {"fullname": "pyriksdagen.refine.detect_mps", "modulename": "pyriksdagen.refine", "qualname": "detect_mps", "kind": "function", "doc": "<p>For each intro in a protocol, detect which MP is mentioned and map it to metadata.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (lxml.etree):</strong>  protocol as an lxml tree</li>\n<li><strong>mp_db (pd.df):</strong>  MP database</li>\n<li><strong>minister (pd.df):</strong>  minister database </li>\n<li><strong>speaker_db (pd.df):</strong>  speaker database </li>\n<li><strong>metadata (dict):</strong>  basic metadata on the protocol</li>\n<li><strong>party_map (dict):</strong>  map from party abbreviations to party names</li>\n<li><strong>join_intros (???):</strong>  intros to be joined</li>\n<li><strong>protocol_id (str):</strong>  ID of the protocol</li>\n<li><strong>unknown_variables (list):</strong>  which variables to detect for unknown MPs</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>protocol as an lxml tree</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">root</span>,</span><span class=\"param\">\t<span class=\"n\">names_ids</span>,</span><span class=\"param\">\t<span class=\"n\">pattern_db</span>,</span><span class=\"param\">\t<span class=\"n\">mp_db</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minister_db</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minister_db_secondary</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">speaker_db</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">party_map</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">join_intros</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">protocol_id</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unknown_variables</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.refine.find_introductions": {"fullname": "pyriksdagen.refine.find_introductions", "modulename": "pyriksdagen.refine", "qualname": "find_introductions", "kind": "function", "doc": "<p>Find instances of curation patterns in all files in a folder.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (lxml.etree):</strong>  protocol as a lxml tree</li>\n<li><strong>pattern_db:</strong>  Patterns to be matched as a Pandas DataFrame.</li>\n<li><strong>intro_ids:</strong>  List of IDs that have been detected as intros.</li>\n<li><strong>minister_db:</strong>  deprecated</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span>, </span><span class=\"param\"><span class=\"n\">pattern_db</span>, </span><span class=\"param\"><span class=\"n\">intro_ids</span>, </span><span class=\"param\"><span class=\"n\">minister_db</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.refine.detect_date": {"fullname": "pyriksdagen.refine.detect_date", "modulename": "pyriksdagen.refine", "qualname": "detect_date", "kind": "function", "doc": "<p>Detects notes with dates in them. Updates the docDate metadata in the teiHeader accordingly.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (lxml.etree):</strong>  protocol as a lxml tree</li>\n<li><strong>metadata (dict):</strong>  basic metadata about the protocol</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>root (lxml.etree): protocol as a lxml tree\n  dates (list): list of the detected dates in an ISO format (YYYY-MM-DD)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span>, </span><span class=\"param\"><span class=\"n\">metadata</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.refine.update_ids": {"fullname": "pyriksdagen.refine.update_ids", "modulename": "pyriksdagen.refine", "qualname": "update_ids", "kind": "function", "doc": "<p>Update element IDs. TODO</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (lxml.etree):</strong>  protocol as a lxml tree</li>\n<li><strong>protocol_id (str):</strong>  protocol ID. DEPRECATED</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>root (lxml.etree): protocol as a lxml tree\n  ids (set): set of all IDs in the protocol</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span>, </span><span class=\"param\"><span class=\"n\">protocol_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.segmentation": {"fullname": "pyriksdagen.segmentation", "modulename": "pyriksdagen.segmentation", "kind": "module", "doc": "<p>Implements the segmentation of the data into speeches and\nultimately into the Parla-Clarin XML format.</p>\n"}, "pyriksdagen.segmentation.classify_paragraph": {"fullname": "pyriksdagen.segmentation.classify_paragraph", "modulename": "pyriksdagen.segmentation", "qualname": "classify_paragraph", "kind": "function", "doc": "<p>Classify paragraph into speeches / descriptions with provided classifier</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>paragraph (str):</strong>  the text content of a paragraph</li>\n<li><strong>classifier (dict):</strong>  a dictionary that includes 'dim', 'ft' and 'model' keys for classification</li>\n<li><strong>prior (np.array):</strong>  log prior for the classes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">paragraph</span>, </span><span class=\"param\"><span class=\"n\">classifier</span>, </span><span class=\"param\"><span class=\"n\">prior</span><span class=\"o\">=</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">0.22314355</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.60943791</span><span class=\"p\">])</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.segmentation.detect_speaker": {"fullname": "pyriksdagen.segmentation.detect_speaker", "modulename": "pyriksdagen.segmentation", "qualname": "detect_speaker", "kind": "function", "doc": "<p>Detect the speaker of the house</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>matched_txt (str):</strong>  intro text</li>\n<li><strong>speaker_db (pd.df):</strong>  dataframe containing the speaker metadata</li>\n<li><strong>metadata (dict):</strong>  metadata about the protocol. Deprecated.</li>\n</ul>\n\n<p>Returns\n    speaker_id (str): ID as a string if detected, otherwise None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">matched_txt</span>, </span><span class=\"param\"><span class=\"n\">speaker_db</span>, </span><span class=\"param\"><span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.segmentation.detect_minister": {"fullname": "pyriksdagen.segmentation.detect_minister", "modulename": "pyriksdagen.segmentation", "qualname": "detect_minister", "kind": "function", "doc": "<p>Detect a minister</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>matched_txt (str):</strong>  intro text</li>\n<li><strong>minister_db (pd.df):</strong>  dataframe containing the minister metadata</li>\n<li><strong>intro_dict (dict):</strong>  processed information about the intro text, possibly containing eg. 'gender' </li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ministed_id (str): ID as a string if detected, otherwise None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">matched_txt</span>, </span><span class=\"param\"><span class=\"n\">minister_db</span>, </span><span class=\"param\"><span class=\"n\">intro_dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.segmentation.detect_mp": {"fullname": "pyriksdagen.segmentation.detect_mp", "modulename": "pyriksdagen.segmentation", "qualname": "detect_mp", "kind": "function", "doc": "<p>Match an MP in a text snippet. Returns an MP id (str) if found, otherwise None.</p>\n\n<p>If multiple people are matched, defaults to returning None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">intro_dict</span>, </span><span class=\"param\"><span class=\"n\">db</span>, </span><span class=\"param\"><span class=\"n\">party_map</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">match_fuzzily</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.segmentation.intro_to_dict": {"fullname": "pyriksdagen.segmentation.intro_to_dict", "modulename": "pyriksdagen.segmentation", "qualname": "intro_to_dict", "kind": "function", "doc": "<p>Convert introduction to a metadata dictionary.\nTries to detect 'name', 'gender', 'party', 'specified', as well as some misc things labeled as 'other'.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>intro_text (str):</strong>  introduction text</li>\n<li><strong>expressions (list):</strong>  a list of regular expressions used for metadata detection.\nUsed for optimization, the algorithm works the same if not provided.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>d (dict): detected metadata</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">intro_text</span>, </span><span class=\"param\"><span class=\"n\">expressions</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.segmentation.expression_dicts": {"fullname": "pyriksdagen.segmentation.expression_dicts", "modulename": "pyriksdagen.segmentation", "qualname": "expression_dicts", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pattern_db</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.segmentation.detect_introduction": {"fullname": "pyriksdagen.segmentation.detect_introduction", "modulename": "pyriksdagen.segmentation", "qualname": "detect_introduction", "kind": "function", "doc": "<p>Detect whether the current paragraph contains an introduction of a speaker.</p>\n\n<p>Returns a dict if an intro is detected, otherwise None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">elem</span>, </span><span class=\"param\"><span class=\"n\">intro_ids</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.segmentation.combine_intros": {"fullname": "pyriksdagen.segmentation.combine_intros", "modulename": "pyriksdagen.segmentation", "qualname": "combine_intros", "kind": "function", "doc": "<p>Join intros that have been split as an artifact of the data processing.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">elem1</span>, </span><span class=\"param\"><span class=\"n\">elem2</span>, </span><span class=\"param\"><span class=\"n\">intro_expressions</span>, </span><span class=\"param\"><span class=\"n\">other_expressions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.segmentation.join_text": {"fullname": "pyriksdagen.segmentation.join_text", "modulename": "pyriksdagen.segmentation", "qualname": "join_text", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text1</span>, </span><span class=\"param\"><span class=\"n\">text2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.utils": {"fullname": "pyriksdagen.utils", "modulename": "pyriksdagen.utils", "kind": "module", "doc": "<p>Provides useful utilities for the other modules as well as for general use.</p>\n"}, "pyriksdagen.utils.XML_NS": {"fullname": "pyriksdagen.utils.XML_NS", "modulename": "pyriksdagen.utils", "qualname": "XML_NS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;{http://www.w3.org/XML/1998/namespace}&#x27;"}, "pyriksdagen.utils.elem_iter": {"fullname": "pyriksdagen.utils.elem_iter", "modulename": "pyriksdagen.utils", "qualname": "elem_iter", "kind": "function", "doc": "<p>Return an iterator of the elements (utterances, notes, pbs) in a protocol body</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root (lxml.etree.Element):</strong>  the protocol data as an lxml tree root</li>\n<li><strong>ns (str):</strong>  TEI namespace, defaults to TEI v1.0.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root</span>, </span><span class=\"param\"><span class=\"n\">ns</span><span class=\"o\">=</span><span class=\"s1\">&#39;{http://www.tei-c.org/ns/1.0}&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.utils.infer_metadata": {"fullname": "pyriksdagen.utils.infer_metadata", "modulename": "pyriksdagen.utils", "qualname": "infer_metadata", "kind": "function", "doc": "<p>Heuristically infer metadata from a protocol id or filename.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename (str):</strong>  the protocols filename. Agnostic wrt. dashes and underscores. Can be relative or absolute.</li>\n</ul>\n\n<p>Returns a dict with keys \"protocol\", \"chamber\", \"year\", and \"number\"</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.utils.clean_html": {"fullname": "pyriksdagen.utils.clean_html", "modulename": "pyriksdagen.utils", "qualname": "clean_html", "kind": "function", "doc": "<p>Read a HTML file and turn it into valid XML</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>s (str):</strong>  original HTML as a string</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tree (lxml.etree.tree): XML tree</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.utils.validate_xml_schema": {"fullname": "pyriksdagen.utils.validate_xml_schema", "modulename": "pyriksdagen.utils", "qualname": "validate_xml_schema", "kind": "function", "doc": "<p>Validate an XML file against a schema.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>xml_path (str):</strong>  path to the XML file</li>\n<li><strong>schema_path (str):</strong>  path to the schema file</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>is_valid (bool): whether the XML is valid according to the schema</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xml_path</span>, </span><span class=\"param\"><span class=\"n\">schema_path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.utils.protocol_iterators": {"fullname": "pyriksdagen.utils.protocol_iterators", "modulename": "pyriksdagen.utils", "qualname": "protocol_iterators", "kind": "function", "doc": "<p>Returns an iterator of protocol paths in a corpus.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>corpus_root (str):</strong>  path to the corpus root</li>\n<li><strong>start (int):</strong>  start year</li>\n<li><strong>end (int):</strong>  end year</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>iterator of the protocols as relative paths to current location</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">corpus_root</span>, </span><span class=\"param\"><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">end</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.utils.parse_date": {"fullname": "pyriksdagen.utils.parse_date", "modulename": "pyriksdagen.utils", "qualname": "parse_date", "kind": "function", "doc": "<p>Parse datetimes with special error handling</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>s (str):</strong>  datetime as a string</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>date (datetime.datetime): date as a datetime</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.utils.get_formatted_uuid": {"fullname": "pyriksdagen.utils.get_formatted_uuid", "modulename": "pyriksdagen.utils", "qualname": "get_formatted_uuid", "kind": "function", "doc": "<p>Generate a UUID and format it in base58.\nThe formatted UUID is prepended bu 'i-' so that it can be used as an XML ID</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>seed (str):</strong>  Random seed. Optional.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>id (str): formatted UUID</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.utils.download_corpus": {"fullname": "pyriksdagen.utils.download_corpus", "modulename": "pyriksdagen.utils", "qualname": "download_corpus", "kind": "function", "doc": "<p>Downloads the full corpus.\nDoes not return anything, just downloads the corpus ZIP and unzips it.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>path (str):</strong>  path for the download</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">&#39;./&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.utils.get_doc_dates": {"fullname": "pyriksdagen.utils.get_doc_dates", "modulename": "pyriksdagen.utils", "qualname": "get_doc_dates", "kind": "function", "doc": "<p>Gets the content of <docDate> elements. </p>\n\n<ul>\n<li><p>match_error is True when the value of the \"when\" attribte doesn't match the element's text value.</p></li>\n<li><p>dates is a list of dates.</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">protocol</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.wikidata": {"fullname": "pyriksdagen.wikidata", "modulename": "pyriksdagen.wikidata", "kind": "module", "doc": "<p></p>\n"}, "pyriksdagen.wikidata.impute_query_string": {"fullname": "pyriksdagen.wikidata.impute_query_string", "modulename": "pyriksdagen.wikidata", "qualname": "impute_query_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.wikidata.get_query_string": {"fullname": "pyriksdagen.wikidata.get_query_string", "modulename": "pyriksdagen.wikidata", "qualname": "get_query_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">query_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.wikidata.reduce_date_precision": {"fullname": "pyriksdagen.wikidata.reduce_date_precision", "modulename": "pyriksdagen.wikidata", "qualname": "reduce_date_precision", "kind": "function", "doc": "<p>Truncates date to accurate length given precision level</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">date</span>, </span><span class=\"param\"><span class=\"n\">precision</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.wikidata.fix_dates": {"fullname": "pyriksdagen.wikidata.fix_dates", "modulename": "pyriksdagen.wikidata", "qualname": "fix_dates", "kind": "function", "doc": "<p>Converts date precision for all relevant cols and removes the precision columns</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">df</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.wikidata.clean_sparql_df": {"fullname": "pyriksdagen.wikidata.clean_sparql_df", "modulename": "pyriksdagen.wikidata", "qualname": "clean_sparql_df", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">df</span>, </span><span class=\"param\"><span class=\"n\">query_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.wikidata.query2df": {"fullname": "pyriksdagen.wikidata.query2df", "modulename": "pyriksdagen.wikidata", "qualname": "query2df", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">query_name</span>, </span><span class=\"param\"><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.wikidata.separate_name_location": {"fullname": "pyriksdagen.wikidata.separate_name_location", "modulename": "pyriksdagen.wikidata", "qualname": "separate_name_location", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name_location_specifier</span>, </span><span class=\"param\"><span class=\"n\">alias</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pyriksdagen.wikidata.move_party_to_party_df": {"fullname": "pyriksdagen.wikidata.move_party_to_party_df", "modulename": "pyriksdagen.wikidata", "qualname": "move_party_to_party_df", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mp_df</span>, </span><span class=\"param\"><span class=\"n\">party_df</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"pyriksdagen": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "pyriksdagen.dataset": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.dataset.IntroDataset": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 6}, "pyriksdagen.dataset.IntroDataset.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "pyriksdagen.dataset.IntroDataset.df": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.dataset.IntroDataset.tokenizer": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.dataset.MergeDataset": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 14}, "pyriksdagen.dataset.MergeDataset.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "pyriksdagen.dataset.MergeDataset.df": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.dataset.MergeDataset.tokenizer": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.db": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.db.year_iterator": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 17}, "pyriksdagen.db.load_patterns": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 7}, "pyriksdagen.db.filter_db": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 11}, "pyriksdagen.db.load_ministers": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 12}, "pyriksdagen.db.load_metadata": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "pyriksdagen.db.load_expressions": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "pyriksdagen.db.clean_person_duplicates": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.download": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.download.LazyArchive": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "pyriksdagen.download.LazyArchive.archive": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.download.oppna_data_to_dict": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 24}, "pyriksdagen.download.dl_kb_blocks": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 14}, "pyriksdagen.download.get_blocks": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 81}, "pyriksdagen.download.count_pages": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 20}, "pyriksdagen.download.fetch_files": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 54}, "pyriksdagen.download.randomize_ordinals": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "pyriksdagen.export": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "pyriksdagen.export.create_tei": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "pyriksdagen.export.dict_to_tei": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 53}, "pyriksdagen.export.gen_parlaclarin_corpus": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 87}, "pyriksdagen.export.dict_to_parlaclarin": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 52}, "pyriksdagen.export.parlaclarin_workflow_individual": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 66}, "pyriksdagen.match_mp": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.multiple_replace": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.clean_names": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.name_equals": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.name_almost_equals": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.names_in": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.names_in_rev": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.fuzzy_name": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.subnames_in_mpname": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.mpsubnames_in_name": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.firstname_lastname": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.two_lastnames": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.lastname": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.match_mp.match_mp": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 114}, "pyriksdagen.metadata": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.metadata.increase_date_precision": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "pyriksdagen.metadata.check_date_overlap": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "pyriksdagen.metadata.impute_member_date": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "pyriksdagen.metadata.impute_minister_date": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "pyriksdagen.metadata.impute_speaker_date": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.impute_date": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.impute_party": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.metadata.abbreviate_party": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.metadata.clean_name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.infer_chamber": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.format_member_role": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.format_minister_role": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.format_speaker_role": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 20}, "pyriksdagen.metadata.Corpus.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.add_mps": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.add_ministers": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.add_speakers": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.add_persons": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.add_names": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.impute_dates": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.impute_parties": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.metadata.Corpus.clean_names": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.mp": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "pyriksdagen.mp.create_database": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "pyriksdagen.mp.create_full_database": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pyriksdagen.mp.add_gender": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 13}, "pyriksdagen.mp.clean_names": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 9}, "pyriksdagen.mp.replace_party_abbreviations": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 10}, "pyriksdagen.mp.add_id": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 22}, "pyriksdagen.mp.add_municipality": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 12}, "pyriksdagen.refine": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.refine.redetect_protocol": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 65}, "pyriksdagen.refine.detect_mps": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 134, "bases": 0, "doc": 153}, "pyriksdagen.refine.find_introductions": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 72}, "pyriksdagen.refine.detect_date": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 83}, "pyriksdagen.refine.update_ids": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 65}, "pyriksdagen.segmentation": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "pyriksdagen.segmentation.classify_paragraph": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 62}, "pyriksdagen.segmentation.detect_speaker": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 67}, "pyriksdagen.segmentation.detect_minister": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 76}, "pyriksdagen.segmentation.detect_mp": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 31}, "pyriksdagen.segmentation.intro_to_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 84}, "pyriksdagen.segmentation.expression_dicts": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "pyriksdagen.segmentation.detect_introduction": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 27}, "pyriksdagen.segmentation.combine_intros": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 16}, "pyriksdagen.segmentation.join_text": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "pyriksdagen.utils.XML_NS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.utils.elem_iter": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 54}, "pyriksdagen.utils.infer_metadata": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 53}, "pyriksdagen.utils.clean_html": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 47}, "pyriksdagen.utils.validate_xml_schema": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 65}, "pyriksdagen.utils.protocol_iterators": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 69}, "pyriksdagen.utils.parse_date": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 43}, "pyriksdagen.utils.get_formatted_uuid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 59}, "pyriksdagen.utils.download_corpus": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 37}, "pyriksdagen.utils.get_doc_dates": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 49}, "pyriksdagen.wikidata": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyriksdagen.wikidata.impute_query_string": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pyriksdagen.wikidata.get_query_string": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "pyriksdagen.wikidata.reduce_date_precision": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 10}, "pyriksdagen.wikidata.fix_dates": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "pyriksdagen.wikidata.clean_sparql_df": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "pyriksdagen.wikidata.query2df": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "pyriksdagen.wikidata.separate_name_location": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pyriksdagen.wikidata.move_party_to_party_df": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}}, "length": 118, "save": true}, "index": {"qualname": {"root": {"docs": {"pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.match_mp.names_in": {"tf": 1}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1}, "pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.df": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.tokenizer": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.increase_date_precision": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.infer_chamber": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.impute_member_date": {"tf": 1}, "pyriksdagen.metadata.impute_minister_date": {"tf": 1}, "pyriksdagen.metadata.impute_speaker_date": {"tf": 1}, "pyriksdagen.metadata.impute_date": {"tf": 1}, "pyriksdagen.metadata.impute_party": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1}, "pyriksdagen.wikidata.impute_query_string": {"tf": 1}}, "df": 8}}}}}, "d": {"docs": {"pyriksdagen.mp.add_id": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.refine.update_ids": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"pyriksdagen.dataset.IntroDataset.df": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.df": {"tf": 1}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 4}, "b": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.db.clean_person_duplicates": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.create_full_database": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"pyriksdagen.metadata.increase_date_precision": {"tf": 1}, "pyriksdagen.metadata.check_date_overlap": {"tf": 1}, "pyriksdagen.metadata.impute_member_date": {"tf": 1}, "pyriksdagen.metadata.impute_minister_date": {"tf": 1}, "pyriksdagen.metadata.impute_speaker_date": {"tf": 1}, "pyriksdagen.metadata.impute_date": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 9, "s": {"docs": {"pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 4, "s": {"docs": {"pyriksdagen.segmentation.expression_dicts": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {"pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 5, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.dataset.IntroDataset.tokenizer": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.tokenizer": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}}, "df": 2}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.segmentation.join_text": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.match_mp.two_lastnames": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.df": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.tokenizer": {"tf": 1}}, "df": 4}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.db.load_metadata": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.impute_member_date": {"tf": 1}, "pyriksdagen.metadata.format_member_role": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.impute_minister_date": {"tf": 1}, "pyriksdagen.metadata.format_minister_role": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.multiple_replace": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pyriksdagen.metadata.Corpus.add_mps": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.db.load_metadata": {"tf": 1}, "pyriksdagen.db.load_expressions": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}, "pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.download.LazyArchive.archive": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.firstname_lastname": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}, "pyriksdagen.match_mp.lastname": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.match_mp.two_lastnames": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.metadata.impute_party": {"tf": 1}, "pyriksdagen.metadata.abbreviate_party": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1.4142135623730951}}, "df": 4}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.parse_date": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.db.clean_person_duplicates": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.metadata.Corpus.add_persons": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.metadata.increase_date_precision": {"tf": 1}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.firstname_lastname": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 1}}, "x": {"docs": {"pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.match_mp.fuzzy_name": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.mp.create_full_database": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.metadata.format_member_role": {"tf": 1}, "pyriksdagen.metadata.format_minister_role": {"tf": 1}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation.expression_dicts": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.db.load_expressions": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.name_equals": {"tf": 1}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.db.clean_person_duplicates": {"tf": 1}, "pyriksdagen.match_mp.clean_names": {"tf": 1}, "pyriksdagen.metadata.clean_name": {"tf": 1}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_mps": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_persons": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 14}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.create_full_database": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyriksdagen.metadata.check_date_overlap": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.infer_chamber": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.LazyArchive.archive": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.match_mp.name_almost_equals": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.abbreviate_party": {"tf": 1}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.metadata.Corpus.add_mps": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_persons": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pyriksdagen.metadata.check_date_overlap": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "b": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}, "pyriksdagen.wikidata.get_query_string": {"tf": 1}}, "df": 4}, "n": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.mp.add_gender": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.multiple_replace": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {"pyriksdagen.match_mp.names_in_rev": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.format_member_role": {"tf": 1}, "pyriksdagen.metadata.format_minister_role": {"tf": 1}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.name_equals": {"tf": 1}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1}, "pyriksdagen.match_mp.fuzzy_name": {"tf": 1}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}, "pyriksdagen.metadata.clean_name": {"tf": 1}, "pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 6, "s": {"docs": {"pyriksdagen.match_mp.clean_names": {"tf": 1}, "pyriksdagen.match_mp.names_in": {"tf": 1}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"pyriksdagen.utils.XML_NS": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.impute_speaker_date": {"tf": 1}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.wikidata.impute_query_string": {"tf": 1}, "pyriksdagen.wikidata.get_query_string": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.refine.update_ids": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation.join_text": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.utils.XML_NS": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.utils.clean_html": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"2": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {"pyriksdagen.wikidata.query2df": {"tf": 1}}, "df": 1}}}, "docs": {"pyriksdagen.wikidata.impute_query_string": {"tf": 1}, "pyriksdagen.wikidata.get_query_string": {"tf": 1}}, "df": 2}}}}}}}, "fullname": {"root": {"docs": {"pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.dataset": {"tf": 1}, "pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.df": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.tokenizer": {"tf": 1}, "pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.df": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.tokenizer": {"tf": 1}, "pyriksdagen.db": {"tf": 1}, "pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.db.load_metadata": {"tf": 1}, "pyriksdagen.db.load_expressions": {"tf": 1}, "pyriksdagen.db.clean_person_duplicates": {"tf": 1}, "pyriksdagen.download": {"tf": 1}, "pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.download.LazyArchive.archive": {"tf": 1}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.download.randomize_ordinals": {"tf": 1}, "pyriksdagen.export": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.match_mp": {"tf": 1}, "pyriksdagen.match_mp.multiple_replace": {"tf": 1}, "pyriksdagen.match_mp.clean_names": {"tf": 1}, "pyriksdagen.match_mp.name_equals": {"tf": 1}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1}, "pyriksdagen.match_mp.names_in": {"tf": 1}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1}, "pyriksdagen.match_mp.fuzzy_name": {"tf": 1}, "pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}, "pyriksdagen.match_mp.two_lastnames": {"tf": 1}, "pyriksdagen.match_mp.lastname": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.metadata": {"tf": 1}, "pyriksdagen.metadata.increase_date_precision": {"tf": 1}, "pyriksdagen.metadata.check_date_overlap": {"tf": 1}, "pyriksdagen.metadata.impute_member_date": {"tf": 1}, "pyriksdagen.metadata.impute_minister_date": {"tf": 1}, "pyriksdagen.metadata.impute_speaker_date": {"tf": 1}, "pyriksdagen.metadata.impute_date": {"tf": 1}, "pyriksdagen.metadata.impute_party": {"tf": 1}, "pyriksdagen.metadata.abbreviate_party": {"tf": 1}, "pyriksdagen.metadata.clean_name": {"tf": 1}, "pyriksdagen.metadata.infer_chamber": {"tf": 1}, "pyriksdagen.metadata.format_member_role": {"tf": 1}, "pyriksdagen.metadata.format_minister_role": {"tf": 1}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_mps": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_persons": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1}, "pyriksdagen.mp": {"tf": 1}, "pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.create_full_database": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}, "pyriksdagen.refine": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.expression_dicts": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}, "pyriksdagen.segmentation.join_text": {"tf": 1}, "pyriksdagen.utils": {"tf": 1}, "pyriksdagen.utils.XML_NS": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}, "pyriksdagen.wikidata": {"tf": 1}, "pyriksdagen.wikidata.impute_query_string": {"tf": 1}, "pyriksdagen.wikidata.get_query_string": {"tf": 1}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}, "pyriksdagen.wikidata.query2df": {"tf": 1}, "pyriksdagen.wikidata.separate_name_location": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 118}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.metadata.impute_party": {"tf": 1}, "pyriksdagen.metadata.abbreviate_party": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1.4142135623730951}}, "df": 4}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.parse_date": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.db.clean_person_duplicates": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.metadata.Corpus.add_persons": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.metadata.increase_date_precision": {"tf": 1}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset": {"tf": 1}, "pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.df": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.tokenizer": {"tf": 1}, "pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.df": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.tokenizer": {"tf": 1}}, "df": 9}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.create_full_database": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"pyriksdagen.metadata.increase_date_precision": {"tf": 1}, "pyriksdagen.metadata.check_date_overlap": {"tf": 1}, "pyriksdagen.metadata.impute_member_date": {"tf": 1}, "pyriksdagen.metadata.impute_minister_date": {"tf": 1}, "pyriksdagen.metadata.impute_speaker_date": {"tf": 1}, "pyriksdagen.metadata.impute_date": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 9, "s": {"docs": {"pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {"pyriksdagen.dataset.IntroDataset.df": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.df": {"tf": 1}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 4}, "b": {"docs": {"pyriksdagen.db": {"tf": 1}, "pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.db.filter_db": {"tf": 1.4142135623730951}, "pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.db.load_metadata": {"tf": 1}, "pyriksdagen.db.load_expressions": {"tf": 1}, "pyriksdagen.db.clean_person_duplicates": {"tf": 1}}, "df": 8}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.db.clean_person_duplicates": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.download": {"tf": 1}, "pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.download.LazyArchive.archive": {"tf": 1}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.download.randomize_ordinals": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 10}}}}}}, "c": {"docs": {"pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 4, "s": {"docs": {"pyriksdagen.segmentation.expression_dicts": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.match_mp.names_in": {"tf": 1}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1}, "pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.df": {"tf": 1}, "pyriksdagen.dataset.IntroDataset.tokenizer": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.increase_date_precision": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.infer_chamber": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.impute_member_date": {"tf": 1}, "pyriksdagen.metadata.impute_minister_date": {"tf": 1}, "pyriksdagen.metadata.impute_speaker_date": {"tf": 1}, "pyriksdagen.metadata.impute_date": {"tf": 1}, "pyriksdagen.metadata.impute_party": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1}, "pyriksdagen.wikidata.impute_query_string": {"tf": 1}}, "df": 8}}}}}, "d": {"docs": {"pyriksdagen.mp.add_id": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.refine.update_ids": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 5, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.dataset.IntroDataset.tokenizer": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.tokenizer": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}}, "df": 2}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.segmentation.join_text": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.match_mp.two_lastnames": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.df": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.tokenizer": {"tf": 1}}, "df": 4}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.db.load_metadata": {"tf": 1}, "pyriksdagen.metadata": {"tf": 1}, "pyriksdagen.metadata.increase_date_precision": {"tf": 1}, "pyriksdagen.metadata.check_date_overlap": {"tf": 1}, "pyriksdagen.metadata.impute_member_date": {"tf": 1}, "pyriksdagen.metadata.impute_minister_date": {"tf": 1}, "pyriksdagen.metadata.impute_speaker_date": {"tf": 1}, "pyriksdagen.metadata.impute_date": {"tf": 1}, "pyriksdagen.metadata.impute_party": {"tf": 1}, "pyriksdagen.metadata.abbreviate_party": {"tf": 1}, "pyriksdagen.metadata.clean_name": {"tf": 1}, "pyriksdagen.metadata.infer_chamber": {"tf": 1}, "pyriksdagen.metadata.format_member_role": {"tf": 1}, "pyriksdagen.metadata.format_minister_role": {"tf": 1}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_mps": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_persons": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 28}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.impute_member_date": {"tf": 1}, "pyriksdagen.metadata.format_member_role": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.impute_minister_date": {"tf": 1}, "pyriksdagen.metadata.format_minister_role": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.match_mp": {"tf": 1}, "pyriksdagen.match_mp.multiple_replace": {"tf": 1}, "pyriksdagen.match_mp.clean_names": {"tf": 1}, "pyriksdagen.match_mp.name_equals": {"tf": 1}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1}, "pyriksdagen.match_mp.names_in": {"tf": 1}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1}, "pyriksdagen.match_mp.fuzzy_name": {"tf": 1}, "pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}, "pyriksdagen.match_mp.two_lastnames": {"tf": 1}, "pyriksdagen.match_mp.lastname": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}}, "df": 15}}}}, "p": {"docs": {"pyriksdagen.match_mp": {"tf": 1}, "pyriksdagen.match_mp.multiple_replace": {"tf": 1}, "pyriksdagen.match_mp.clean_names": {"tf": 1}, "pyriksdagen.match_mp.name_equals": {"tf": 1}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1}, "pyriksdagen.match_mp.names_in": {"tf": 1}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1}, "pyriksdagen.match_mp.fuzzy_name": {"tf": 1}, "pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}, "pyriksdagen.match_mp.two_lastnames": {"tf": 1}, "pyriksdagen.match_mp.lastname": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}, "pyriksdagen.mp": {"tf": 1}, "pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.create_full_database": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 24, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pyriksdagen.metadata.Corpus.add_mps": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.multiple_replace": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.db.load_metadata": {"tf": 1}, "pyriksdagen.db.load_expressions": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}, "pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.download.LazyArchive.archive": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.firstname_lastname": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}, "pyriksdagen.match_mp.lastname": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.match_mp.two_lastnames": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.firstname_lastname": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 1}}, "x": {"docs": {"pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.match_mp.fuzzy_name": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.mp.create_full_database": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.metadata.format_member_role": {"tf": 1}, "pyriksdagen.metadata.format_minister_role": {"tf": 1}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation.expression_dicts": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.db.load_expressions": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.export": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 6}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.name_equals": {"tf": 1}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.db.clean_person_duplicates": {"tf": 1}, "pyriksdagen.match_mp.clean_names": {"tf": 1}, "pyriksdagen.metadata.clean_name": {"tf": 1}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_mps": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_persons": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 14}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.create_full_database": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyriksdagen.metadata.check_date_overlap": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.infer_chamber": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.LazyArchive.archive": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.match_mp.name_almost_equals": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.abbreviate_party": {"tf": 1}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.metadata.Corpus.add_mps": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_persons": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pyriksdagen.metadata.check_date_overlap": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "b": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}, "pyriksdagen.wikidata.get_query_string": {"tf": 1}}, "df": 4}, "n": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.mp.add_gender": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.multiple_replace": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {"pyriksdagen.match_mp.names_in_rev": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.refine": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}}, "df": 6}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.format_member_role": {"tf": 1}, "pyriksdagen.metadata.format_minister_role": {"tf": 1}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.wikidata": {"tf": 1}, "pyriksdagen.wikidata.impute_query_string": {"tf": 1}, "pyriksdagen.wikidata.get_query_string": {"tf": 1}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}, "pyriksdagen.wikidata.query2df": {"tf": 1}, "pyriksdagen.wikidata.separate_name_location": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 9}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.name_equals": {"tf": 1}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1}, "pyriksdagen.match_mp.fuzzy_name": {"tf": 1}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}, "pyriksdagen.metadata.clean_name": {"tf": 1}, "pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 6, "s": {"docs": {"pyriksdagen.match_mp.clean_names": {"tf": 1}, "pyriksdagen.match_mp.names_in": {"tf": 1}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"pyriksdagen.utils.XML_NS": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.metadata.impute_speaker_date": {"tf": 1}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.expression_dicts": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}, "pyriksdagen.segmentation.join_text": {"tf": 1}}, "df": 10}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.wikidata.impute_query_string": {"tf": 1}, "pyriksdagen.wikidata.get_query_string": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.refine.update_ids": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.utils": {"tf": 1}, "pyriksdagen.utils.XML_NS": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 11}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation.join_text": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.utils.XML_NS": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.utils.clean_html": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"2": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {"pyriksdagen.wikidata.query2df": {"tf": 1}}, "df": 1}}}, "docs": {"pyriksdagen.wikidata.impute_query_string": {"tf": 1}, "pyriksdagen.wikidata.get_query_string": {"tf": 1}}, "df": 2}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {"pyriksdagen.utils.XML_NS": {"tf": 1.4142135623730951}}, "df": 1, "x": {"2": {"7": {"docs": {"pyriksdagen.utils.XML_NS": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"pyriksdagen.utils.XML_NS": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"3": {"docs": {"pyriksdagen.utils.XML_NS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"1": {"9": {"9": {"8": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.XML_NS": {"tf": 1}}, "df": 1}}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}, "signature": {"root": {"0": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 2}, "1": {"9": {"2": {"docs": {"pyriksdagen.match_mp.multiple_replace": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}, "2": {"2": {"3": {"1": {"4": {"3": {"5": {"5": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"8": {"3": {"docs": {"pyriksdagen.match_mp.multiple_replace": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1.4142135623730951}, "pyriksdagen.db.load_ministers": {"tf": 1.4142135623730951}, "pyriksdagen.db.load_expressions": {"tf": 1.4142135623730951}, "pyriksdagen.download.fetch_files": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.impute_member_date": {"tf": 1.4142135623730951}, "pyriksdagen.utils.elem_iter": {"tf": 1.4142135623730951}, "pyriksdagen.utils.download_corpus": {"tf": 1.4142135623730951}}, "df": 7}, "docs": {}, "df": 0}, "6": {"0": {"9": {"4": {"3": {"7": {"9": {"1": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyriksdagen.dataset.IntroDataset.__init__": {"tf": 2.8284271247461903}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 2.8284271247461903}, "pyriksdagen.db.year_iterator": {"tf": 3.1622776601683795}, "pyriksdagen.db.load_patterns": {"tf": 4.898979485566356}, "pyriksdagen.db.filter_db": {"tf": 6.48074069840786}, "pyriksdagen.db.load_ministers": {"tf": 4}, "pyriksdagen.db.load_metadata": {"tf": 2.6457513110645907}, "pyriksdagen.db.load_expressions": {"tf": 4.898979485566356}, "pyriksdagen.db.clean_person_duplicates": {"tf": 3.1622776601683795}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 3.1622776601683795}, "pyriksdagen.download.dl_kb_blocks": {"tf": 3.7416573867739413}, "pyriksdagen.download.get_blocks": {"tf": 5.477225575051661}, "pyriksdagen.download.count_pages": {"tf": 3.7416573867739413}, "pyriksdagen.download.fetch_files": {"tf": 4.47213595499958}, "pyriksdagen.download.randomize_ordinals": {"tf": 3.1622776601683795}, "pyriksdagen.export.create_tei": {"tf": 3.7416573867739413}, "pyriksdagen.export.dict_to_tei": {"tf": 3.1622776601683795}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 5.5677643628300215}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 3.1622776601683795}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 4.795831523312719}, "pyriksdagen.match_mp.multiple_replace": {"tf": 5.0990195135927845}, "pyriksdagen.match_mp.clean_names": {"tf": 3.1622776601683795}, "pyriksdagen.match_mp.name_equals": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.names_in": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.names_in_rev": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.fuzzy_name": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.subnames_in_mpname": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.firstname_lastname": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.two_lastnames": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.lastname": {"tf": 3.7416573867739413}, "pyriksdagen.match_mp.match_mp": {"tf": 4.69041575982343}, "pyriksdagen.metadata.increase_date_precision": {"tf": 4.242640687119285}, "pyriksdagen.metadata.check_date_overlap": {"tf": 4.69041575982343}, "pyriksdagen.metadata.impute_member_date": {"tf": 4.898979485566356}, "pyriksdagen.metadata.impute_minister_date": {"tf": 3.7416573867739413}, "pyriksdagen.metadata.impute_speaker_date": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.impute_date": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.impute_party": {"tf": 3.7416573867739413}, "pyriksdagen.metadata.abbreviate_party": {"tf": 3.7416573867739413}, "pyriksdagen.metadata.clean_name": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.infer_chamber": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.format_member_role": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.format_minister_role": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.format_speaker_role": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 4}, "pyriksdagen.metadata.Corpus.add_mps": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.add_speakers": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.add_persons": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.impute_dates": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.impute_parties": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 3.1622776601683795}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 3.1622776601683795}, "pyriksdagen.mp.create_database": {"tf": 3.1622776601683795}, "pyriksdagen.mp.create_full_database": {"tf": 3.1622776601683795}, "pyriksdagen.mp.add_gender": {"tf": 3.7416573867739413}, "pyriksdagen.mp.clean_names": {"tf": 3.1622776601683795}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 3.7416573867739413}, "pyriksdagen.mp.add_id": {"tf": 3.1622776601683795}, "pyriksdagen.mp.add_municipality": {"tf": 3.7416573867739413}, "pyriksdagen.refine.redetect_protocol": {"tf": 3.7416573867739413}, "pyriksdagen.refine.detect_mps": {"tf": 10.099504938362077}, "pyriksdagen.refine.find_introductions": {"tf": 5.0990195135927845}, "pyriksdagen.refine.detect_date": {"tf": 3.7416573867739413}, "pyriksdagen.refine.update_ids": {"tf": 3.7416573867739413}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 6.324555320336759}, "pyriksdagen.segmentation.detect_speaker": {"tf": 4.69041575982343}, "pyriksdagen.segmentation.detect_minister": {"tf": 4.242640687119285}, "pyriksdagen.segmentation.detect_mp": {"tf": 5.477225575051661}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 4.242640687119285}, "pyriksdagen.segmentation.expression_dicts": {"tf": 3.1622776601683795}, "pyriksdagen.segmentation.detect_introduction": {"tf": 3.7416573867739413}, "pyriksdagen.segmentation.combine_intros": {"tf": 4.69041575982343}, "pyriksdagen.segmentation.join_text": {"tf": 3.7416573867739413}, "pyriksdagen.utils.elem_iter": {"tf": 4.47213595499958}, "pyriksdagen.utils.infer_metadata": {"tf": 3.1622776601683795}, "pyriksdagen.utils.clean_html": {"tf": 3.1622776601683795}, "pyriksdagen.utils.validate_xml_schema": {"tf": 3.7416573867739413}, "pyriksdagen.utils.protocol_iterators": {"tf": 5.0990195135927845}, "pyriksdagen.utils.parse_date": {"tf": 3.1622776601683795}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 3.7416573867739413}, "pyriksdagen.utils.download_corpus": {"tf": 4.123105625617661}, "pyriksdagen.utils.get_doc_dates": {"tf": 3.1622776601683795}, "pyriksdagen.wikidata.impute_query_string": {"tf": 3.7416573867739413}, "pyriksdagen.wikidata.get_query_string": {"tf": 3.1622776601683795}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 3.7416573867739413}, "pyriksdagen.wikidata.fix_dates": {"tf": 3.1622776601683795}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 3.7416573867739413}, "pyriksdagen.wikidata.query2df": {"tf": 4.242640687119285}, "pyriksdagen.wikidata.separate_name_location": {"tf": 3.7416573867739413}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 3.7416573867739413}}, "df": 96, "d": {"docs": {}, "df": 0, "f": {"docs": {"pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1}, "pyriksdagen.db.clean_person_duplicates": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1.4142135623730951}}, "df": 6}, "b": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.match_mp.name_equals": {"tf": 1}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1}, "pyriksdagen.match_mp.names_in": {"tf": 1}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1}, "pyriksdagen.match_mp.fuzzy_name": {"tf": 1}, "pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}, "pyriksdagen.match_mp.two_lastnames": {"tf": 1}, "pyriksdagen.match_mp.lastname": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.metadata.impute_member_date": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.impute_minister_date": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.impute_speaker_date": {"tf": 1}, "pyriksdagen.metadata.impute_date": {"tf": 1}, "pyriksdagen.metadata.impute_party": {"tf": 1}, "pyriksdagen.metadata.abbreviate_party": {"tf": 1}, "pyriksdagen.metadata.clean_name": {"tf": 1}, "pyriksdagen.metadata.infer_chamber": {"tf": 1}, "pyriksdagen.metadata.format_member_role": {"tf": 1}, "pyriksdagen.metadata.format_minister_role": {"tf": 1}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1.4142135623730951}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_mps": {"tf": 2.23606797749979}, "pyriksdagen.refine.find_introductions": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.expression_dicts": {"tf": 1}}, "df": 38}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.increase_date_precision": {"tf": 1}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 3}, "a": {"docs": {"pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.mp.create_full_database": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 2, "s": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyriksdagen.metadata.impute_member_date": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.db.load_expressions": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.db.filter_db": {"tf": 2}, "pyriksdagen.db.load_expressions": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 3}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.wikidata.impute_query_string": {"tf": 1}, "pyriksdagen.wikidata.query2df": {"tf": 1}}, "df": 12}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.name_equals": {"tf": 1}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1}, "pyriksdagen.match_mp.names_in": {"tf": 1}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1}, "pyriksdagen.match_mp.fuzzy_name": {"tf": 1}, "pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname": {"tf": 1}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1}, "pyriksdagen.match_mp.two_lastnames": {"tf": 1}, "pyriksdagen.match_mp.lastname": {"tf": 1}, "pyriksdagen.wikidata.get_query_string": {"tf": 1}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}, "pyriksdagen.wikidata.query2df": {"tf": 1}, "pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 15, "s": {"docs": {"pyriksdagen.match_mp.clean_names": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.db.load_expressions": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1.4142135623730951}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.expression_dicts": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.metadata.impute_party": {"tf": 1}, "pyriksdagen.metadata.abbreviate_party": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.db.load_expressions": {"tf": 1}}, "df": 2}}}}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"pyriksdagen.metadata.Corpus.add_mps": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_persons": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1}, "pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1}}, "df": 10}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"1": {"docs": {"pyriksdagen.metadata.check_date_overlap": {"tf": 1}}, "df": 1}, "2": {"docs": {"pyriksdagen.metadata.check_date_overlap": {"tf": 1}}, "df": 1}, "docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.match_mp.multiple_replace": {"tf": 1}, "pyriksdagen.metadata.increase_date_precision": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 5}}}, "r": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.wikidata.impute_query_string": {"tf": 1}, "pyriksdagen.wikidata.query2df": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"1": {"docs": {"pyriksdagen.metadata.check_date_overlap": {"tf": 1}}, "df": 1}, "2": {"docs": {"pyriksdagen.metadata.check_date_overlap": {"tf": 1}}, "df": 1}, "docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.match_mp.multiple_replace": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 4}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"1": {"docs": {"pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 1}, "2": {"docs": {"pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 1}, "docs": {"pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {"pyriksdagen.match_mp.multiple_replace": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.impute_member_date": {"tf": 1}}, "df": 2, "d": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}}, "df": 5, "s": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 6, "s": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.metadata.Corpus.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.wikidata.separate_name_location": {"tf": 1}}, "df": 1}}}}}}}, "\u00f6": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.metadata.impute_member_date": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.metadata.increase_date_precision": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"1": {"docs": {"pyriksdagen.segmentation.join_text": {"tf": 1}}, "df": 1}, "2": {"docs": {"pyriksdagen.segmentation.join_text": {"tf": 1}}, "df": 1}, "docs": {"pyriksdagen.match_mp.multiple_replace": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 2}}, "i": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.metadata.impute_member_date": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}}, "df": 7}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 2}}, "p": {"docs": {"pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1}}, "df": 7}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"1": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 2}}}}}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyriksdagen.metadata.impute_member_date": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.impute_minister_date": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.metadata.Corpus.__init__": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.wikidata.get_query_string": {"tf": 1}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1}, "pyriksdagen.wikidata.query2df": {"tf": 1}}, "df": 3}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}, "2": {"0": {"1": {"3": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyriksdagen": {"tf": 1.4142135623730951}, "pyriksdagen.dataset": {"tf": 1.7320508075688772}, "pyriksdagen.dataset.IntroDataset": {"tf": 1.4142135623730951}, "pyriksdagen.dataset.IntroDataset.__init__": {"tf": 1.7320508075688772}, "pyriksdagen.dataset.IntroDataset.df": {"tf": 1.7320508075688772}, "pyriksdagen.dataset.IntroDataset.tokenizer": {"tf": 1.7320508075688772}, "pyriksdagen.dataset.MergeDataset": {"tf": 1.4142135623730951}, "pyriksdagen.dataset.MergeDataset.__init__": {"tf": 1.7320508075688772}, "pyriksdagen.dataset.MergeDataset.df": {"tf": 1.7320508075688772}, "pyriksdagen.dataset.MergeDataset.tokenizer": {"tf": 1.7320508075688772}, "pyriksdagen.db": {"tf": 1.7320508075688772}, "pyriksdagen.db.year_iterator": {"tf": 1.7320508075688772}, "pyriksdagen.db.load_patterns": {"tf": 1.4142135623730951}, "pyriksdagen.db.filter_db": {"tf": 1.4142135623730951}, "pyriksdagen.db.load_ministers": {"tf": 1.7320508075688772}, "pyriksdagen.db.load_metadata": {"tf": 1.7320508075688772}, "pyriksdagen.db.load_expressions": {"tf": 1.7320508075688772}, "pyriksdagen.db.clean_person_duplicates": {"tf": 1.7320508075688772}, "pyriksdagen.download": {"tf": 1.7320508075688772}, "pyriksdagen.download.LazyArchive": {"tf": 1.4142135623730951}, "pyriksdagen.download.LazyArchive.archive": {"tf": 1.7320508075688772}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 2}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1.4142135623730951}, "pyriksdagen.download.get_blocks": {"tf": 5.291502622129181}, "pyriksdagen.download.count_pages": {"tf": 1.7320508075688772}, "pyriksdagen.download.fetch_files": {"tf": 4.47213595499958}, "pyriksdagen.download.randomize_ordinals": {"tf": 1.4142135623730951}, "pyriksdagen.export": {"tf": 1.4142135623730951}, "pyriksdagen.export.create_tei": {"tf": 4.69041575982343}, "pyriksdagen.export.dict_to_tei": {"tf": 4.69041575982343}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 6.4031242374328485}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 4.69041575982343}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 5}, "pyriksdagen.match_mp": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.multiple_replace": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.clean_names": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.name_equals": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.name_almost_equals": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.names_in": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.names_in_rev": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.fuzzy_name": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.subnames_in_mpname": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.mpsubnames_in_name": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.firstname_lastname": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.firstname_lastname_reversed": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.two_lastnames": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.lastname": {"tf": 1.7320508075688772}, "pyriksdagen.match_mp.match_mp": {"tf": 5.291502622129181}, "pyriksdagen.metadata": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.increase_date_precision": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.check_date_overlap": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.impute_member_date": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.impute_minister_date": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.impute_speaker_date": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.impute_date": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.impute_party": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.abbreviate_party": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.clean_name": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.infer_chamber": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.format_member_role": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.format_minister_role": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.format_speaker_role": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.Corpus.__init__": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.add_mps": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.add_ministers": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.add_speakers": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.add_persons": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.add_location_specifiers": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.add_names": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.impute_dates": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.impute_parties": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.abbreviate_parties": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus.clean_names": {"tf": 1.7320508075688772}, "pyriksdagen.mp": {"tf": 1.7320508075688772}, "pyriksdagen.mp.create_database": {"tf": 1.4142135623730951}, "pyriksdagen.mp.create_full_database": {"tf": 1.7320508075688772}, "pyriksdagen.mp.add_gender": {"tf": 1.7320508075688772}, "pyriksdagen.mp.clean_names": {"tf": 1.4142135623730951}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1.7320508075688772}, "pyriksdagen.mp.add_id": {"tf": 1.7320508075688772}, "pyriksdagen.mp.add_municipality": {"tf": 1.4142135623730951}, "pyriksdagen.refine": {"tf": 1.7320508075688772}, "pyriksdagen.refine.redetect_protocol": {"tf": 5.196152422706632}, "pyriksdagen.refine.detect_mps": {"tf": 8.06225774829855}, "pyriksdagen.refine.find_introductions": {"tf": 5.291502622129181}, "pyriksdagen.refine.detect_date": {"tf": 5.477225575051661}, "pyriksdagen.refine.update_ids": {"tf": 5.291502622129181}, "pyriksdagen.segmentation": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 4.898979485566356}, "pyriksdagen.segmentation.detect_speaker": {"tf": 5.196152422706632}, "pyriksdagen.segmentation.detect_minister": {"tf": 5.744562646538029}, "pyriksdagen.segmentation.detect_mp": {"tf": 2.449489742783178}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 5.385164807134504}, "pyriksdagen.segmentation.expression_dicts": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.detect_introduction": {"tf": 2.449489742783178}, "pyriksdagen.segmentation.combine_intros": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.join_text": {"tf": 1.7320508075688772}, "pyriksdagen.utils": {"tf": 1.7320508075688772}, "pyriksdagen.utils.XML_NS": {"tf": 1.7320508075688772}, "pyriksdagen.utils.elem_iter": {"tf": 4.358898943540674}, "pyriksdagen.utils.infer_metadata": {"tf": 4.242640687119285}, "pyriksdagen.utils.clean_html": {"tf": 4.69041575982343}, "pyriksdagen.utils.validate_xml_schema": {"tf": 5.291502622129181}, "pyriksdagen.utils.protocol_iterators": {"tf": 5.656854249492381}, "pyriksdagen.utils.parse_date": {"tf": 4.69041575982343}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 4.795831523312719}, "pyriksdagen.utils.download_corpus": {"tf": 3.7416573867739413}, "pyriksdagen.utils.get_doc_dates": {"tf": 4.358898943540674}, "pyriksdagen.wikidata": {"tf": 1.7320508075688772}, "pyriksdagen.wikidata.impute_query_string": {"tf": 1.7320508075688772}, "pyriksdagen.wikidata.get_query_string": {"tf": 1.7320508075688772}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1.4142135623730951}, "pyriksdagen.wikidata.fix_dates": {"tf": 1.4142135623730951}, "pyriksdagen.wikidata.clean_sparql_df": {"tf": 1.7320508075688772}, "pyriksdagen.wikidata.query2df": {"tf": 1.7320508075688772}, "pyriksdagen.wikidata.separate_name_location": {"tf": 1.7320508075688772}, "pyriksdagen.wikidata.move_party_to_party_df": {"tf": 1.7320508075688772}}, "df": 118, "a": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.download.randomize_ordinals": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1.7320508075688772}, "pyriksdagen.export.dict_to_tei": {"tf": 1.7320508075688772}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1.7320508075688772}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1.7320508075688772}, "pyriksdagen.refine.detect_date": {"tf": 1.4142135623730951}, "pyriksdagen.refine.update_ids": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1.4142135623730951}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1.4142135623730951}, "pyriksdagen.utils.clean_html": {"tf": 1.4142135623730951}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 30, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1.4142135623730951}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 15, "d": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1.7320508075688772}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1.4142135623730951}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 17}, "y": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1.4142135623730951}, "pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1.4142135623730951}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 24}}}}}}}, "e": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.mp.clean_names": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1.4142135623730951}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 7}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.find_introductions": {"tf": 1.7320508075688772}, "pyriksdagen.refine.detect_date": {"tf": 1.4142135623730951}, "pyriksdagen.refine.update_ids": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}, "pyriksdagen.utils": {"tf": 1.4142135623730951}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 20}, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 2}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.mp": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {"pyriksdagen.export": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1.4142135623730951}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.parse_date": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "h": {"docs": {"pyriksdagen.utils.validate_xml_schema": {"tf": 2}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 8}, "s": {"docs": {"pyriksdagen.utils": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}, "pyriksdagen.export.create_tei": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_tei": {"tf": 1.4142135623730951}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 2.23606797749979}, "pyriksdagen.refine.detect_mps": {"tf": 2.449489742783178}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1.7320508075688772}, "pyriksdagen.refine.update_ids": {"tf": 2.23606797749979}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1.4142135623730951}, "pyriksdagen.utils.infer_metadata": {"tf": 1.4142135623730951}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 17, "s": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1.4142135623730951}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.download.randomize_ordinals": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1.4142135623730951}, "pyriksdagen.utils": {"tf": 1.4142135623730951}, "pyriksdagen.utils.download_corpus": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 15, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1.7320508075688772}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1.4142135623730951}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1.7320508075688772}}, "df": 9, "s": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1.4142135623730951}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1.7320508075688772}, "pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.mp.add_gender": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}, "t": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 2}, "pyriksdagen.download.fetch_files": {"tf": 1.4142135623730951}, "pyriksdagen.export.create_tei": {"tf": 1.7320508075688772}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1.4142135623730951}, "pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.metadata.Corpus": {"tf": 1.7320508075688772}, "pyriksdagen.mp": {"tf": 1.4142135623730951}, "pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1.4142135623730951}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_date": {"tf": 2}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_speaker": {"tf": 2}, "pyriksdagen.segmentation.detect_minister": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}, "pyriksdagen.utils": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1.4142135623730951}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 2}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1.7320508075688772}, "pyriksdagen.utils.get_doc_dates": {"tf": 2}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 36, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}, "m": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 7, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1.7320508075688772}, "pyriksdagen.export.dict_to_tei": {"tf": 1.7320508075688772}, "pyriksdagen.utils.elem_iter": {"tf": 1.4142135623730951}}, "df": 3, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_tei": {"tf": 1.4142135623730951}, "pyriksdagen.refine.redetect_protocol": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1.4142135623730951}, "pyriksdagen.refine.update_ids": {"tf": 1.4142135623730951}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1.7320508075688772}}, "df": 10}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.download.LazyArchive": {"tf": 1.4142135623730951}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}, "pyriksdagen.mp.add_gender": {"tf": 1.4142135623730951}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 2}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1.4142135623730951}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1.7320508075688772}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 18, "d": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.refine.update_ids": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.utils.clean_html": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_minister": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1.4142135623730951}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1.4142135623730951}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 16, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}}, "df": 3}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 2}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"pyriksdagen.refine.update_ids": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 2}}, "d": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.utils.parse_date": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_speaker": {"tf": 2}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1.7320508075688772}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.mp": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 9, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset.IntroDataset": {"tf": 1}, "pyriksdagen.dataset.MergeDataset": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.download.randomize_ordinals": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.7320508075688772}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 11}}}}}}, "e": {"docs": {"pyriksdagen.utils.parse_date": {"tf": 1.4142135623730951}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1.7320508075688772}, "pyriksdagen.utils.get_doc_dates": {"tf": 1.4142135623730951}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.parse_date": {"tf": 2}}, "df": 1, "s": {"docs": {"pyriksdagen.utils.parse_date": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1.4142135623730951}, "pyriksdagen.match_mp.match_mp": {"tf": 1.7320508075688772}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.find_introductions": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.mp.add_id": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1.4142135623730951}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 3}}}}}}}}, "m": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}, "f": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1.4142135623730951}}, "df": 1}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyriksdagen.utils.download_corpus": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 3, "n": {"docs": {"pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}}, "df": 4}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyriksdagen.mp.add_id": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 6}}, "s": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}}, "i": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1, "n": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_date": {"tf": 1.7320508075688772}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 13, "t": {"docs": {"pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.dataset.IntroDataset": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 3}}}, "o": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}}, "df": 5}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 2, "s": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.mp.create_database": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 2}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 9}, "t": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1.4142135623730951}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "d": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}, "pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.update_ids": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_minister": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1.4142135623730951}, "pyriksdagen.refine.update_ids": {"tf": 1.7320508075688772}}, "df": 4}}, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 2}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1.4142135623730951}}, "df": 7, "o": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"5": {"8": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 2}}, "df": 1}, "u": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_tei": {"tf": 1.4142135623730951}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1.7320508075688772}, "pyriksdagen.refine.detect_mps": {"tf": 1.7320508075688772}, "pyriksdagen.refine.detect_date": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1.7320508075688772}, "pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 13}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.mp": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1.7320508075688772}}, "df": 4}, "d": {"docs": {"pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1.7320508075688772}}, "df": 1}}}, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.mp.add_municipality": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 5}}}}}, "p": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.7320508075688772}}, "df": 2}}, "p": {"docs": {"pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.7320508075688772}, "pyriksdagen.segmentation.detect_mp": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.mp.add_municipality": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.utils": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1.4142135623730951}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 2}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.parse_date": {"tf": 1}}, "df": 10}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}, "n": {"docs": {"pyriksdagen.utils.get_doc_dates": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.utils": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}}, "df": 1}}, "w": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 6}}, "t": {"docs": {"pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.mp.clean_names": {"tf": 1}, "pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}, "s": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.dataset.MergeDataset": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 2}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.7320508075688772}, "pyriksdagen.utils.download_corpus": {"tf": 1.4142135623730951}}, "df": 6}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 4, "s": {"docs": {"pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 3, "s": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1.4142135623730951}}, "df": 3}}}, "s": {"docs": {"pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.export": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.mp.create_database": {"tf": 1}}, "df": 6}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1.4142135623730951}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1.4142135623730951}, "pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}, "pyriksdagen.metadata.Corpus": {"tf": 1}, "pyriksdagen.mp": {"tf": 1}, "pyriksdagen.mp.create_database": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_doc_dates": {"tf": 1.7320508075688772}}, "df": 26}, "n": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.mp": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 8, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.utils.clean_html": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}}, "df": 2, "s": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.utils": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}}, "df": 4}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.year_iterator": {"tf": 1.4142135623730951}, "pyriksdagen.db.filter_db": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1.4142135623730951}, "pyriksdagen.download.fetch_files": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}, "pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}}, "df": 3}}, "g": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.segmentation.classify_paragraph": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 2}, "pyriksdagen.export.dict_to_tei": {"tf": 1.4142135623730951}, "pyriksdagen.refine.redetect_protocol": {"tf": 1.7320508075688772}, "pyriksdagen.refine.detect_mps": {"tf": 1.7320508075688772}, "pyriksdagen.refine.find_introductions": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_date": {"tf": 2}, "pyriksdagen.refine.update_ids": {"tf": 2}, "pyriksdagen.utils.elem_iter": {"tf": 1.4142135623730951}, "pyriksdagen.utils.clean_html": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1.4142135623730951}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 7, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pyriksdagen.db.load_patterns": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 6, "s": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.export.create_tei": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.dict_to_parlaclarin": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.segmentation.detect_speaker": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.detect_mp": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}, "pyriksdagen.segmentation.detect_introduction": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}, "pyriksdagen.utils.parse_date": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 20}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.segmentation.detect_mp": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.mp.clean_names": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.mp.replace_party_abbreviations": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.wikidata.fix_dates": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.clean_html": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyriksdagen.download.randomize_ordinals": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1.7320508075688772}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1.4142135623730951}, "pyriksdagen.refine.update_ids": {"tf": 1.4142135623730951}, "pyriksdagen.utils.elem_iter": {"tf": 1.4142135623730951}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}}, "df": 8}}, "w": {"docs": {"pyriksdagen.metadata.Corpus": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.db.filter_db": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1.7320508075688772}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.refine.update_ids": {"tf": 1}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 5, "s": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.utils.protocol_iterators": {"tf": 1.4142135623730951}}, "df": 3}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.download.fetch_files": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.export.create_tei": {"tf": 1.4142135623730951}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.refine.detect_date": {"tf": 1.4142135623730951}, "pyriksdagen.refine.update_ids": {"tf": 1.4142135623730951}, "pyriksdagen.utils.elem_iter": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1}}, "df": 9}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyriksdagen.refine.redetect_protocol": {"tf": 1}, "pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"pyriksdagen.segmentation.detect_minister": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.utils.parse_date": {"tf": 1}, "pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 1}}}}}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}, "pyriksdagen.utils": {"tf": 1}}, "df": 3, "d": {"docs": {"pyriksdagen.segmentation.intro_to_dict": {"tf": 1.4142135623730951}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 2}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.utils": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.refine.update_ids": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.refine.detect_date": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.segmentation": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.utils": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.get_formatted_uuid": {"tf": 1.7320508075688772}}, "df": 1}}}}, "v": {"1": {"docs": {"pyriksdagen.utils.elem_iter": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.mp.create_database": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}, "pyriksdagen.refine.detect_mps": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.utils.clean_html": {"tf": 1}, "pyriksdagen.utils.validate_xml_schema": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.validate_xml_schema": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.utils.get_doc_dates": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.db.load_ministers": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyriksdagen.refine.detect_mps": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "b": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.export.gen_parlaclarin_corpus": {"tf": 1}, "pyriksdagen.export.parlaclarin_workflow_individual": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"pyriksdagen.download.LazyArchive": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.download.fetch_files": {"tf": 1.4142135623730951}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.segmentation.classify_paragraph": {"tf": 1}, "pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.download.dl_kb_blocks": {"tf": 1}, "pyriksdagen.download.get_blocks": {"tf": 1}, "pyriksdagen.export.dict_to_tei": {"tf": 1}, "pyriksdagen.segmentation": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1.4142135623730951}, "pyriksdagen.utils.validate_xml_schema": {"tf": 2}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 8}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyriksdagen.download.oppna_data_to_dict": {"tf": 1}, "pyriksdagen.utils.clean_html": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyriksdagen.mp": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyriksdagen.utils.parse_date": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.refine.find_introductions": {"tf": 1}, "pyriksdagen.segmentation.combine_intros": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.mp.add_municipality": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.segmentation.detect_speaker": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyriksdagen.utils.infer_metadata": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1}}, "df": 1, "s": {"docs": {"pyriksdagen.utils.get_doc_dates": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyriksdagen.download.count_pages": {"tf": 1}, "pyriksdagen.mp.add_id": {"tf": 1}, "pyriksdagen.utils.get_formatted_uuid": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.export": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"pyriksdagen.utils": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyriksdagen.match_mp.match_mp": {"tf": 1.4142135623730951}, "pyriksdagen.mp.add_gender": {"tf": 1}, "pyriksdagen.segmentation.detect_minister": {"tf": 1}, "pyriksdagen.segmentation.intro_to_dict": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {"pyriksdagen.download.get_blocks": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyriksdagen.wikidata.reduce_date_precision": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyriksdagen.utils.download_corpus": {"tf": 1}}, "df": 1}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();